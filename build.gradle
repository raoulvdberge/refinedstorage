buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.6"
group = "refinedstorage"
archivesBaseName = "refinedstorage"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.12.2-14.23.4.2703"
    runDir = "run"
    useDepAts = true
    mappings = "snapshot_20180526"
}

repositories {
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        url "http://maven.cil.li"
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
}

dependencies {
    deobfCompile "mezz.jei:jei_1.12.2:4.9.1.191:api"
    runtime "mezz.jei:jei_1.12.2:4.9.1.191"
    deobfCompile "li.cil.oc:OpenComputers:MC1.12.1-1.7.1.43:api"
    compile "inventory-tweaks:InventoryTweaks:1.63:api"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    include "com/raoulvdberge/refinedstorage/**"
    include "assets/**"
    include "mcmod.info"
    include "pack.mcmeta"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier 'deobf'
}

task apiJar(type: Jar, dependsOn: 'sourceMainJava') {
    from sourceSets.main.allSource
    from sourceSets.main.output
    include 'com/raoulvdberge/refinedstorage/api/**/*'
    classifier 'api'
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    doLast {
        keyStore = project.property('keyStore')
        alias = project.property('keyStoreAlias')
        storePass = project.property('keyStorePass')
        keyPass = project.property('keyStoreKeyPass')
        inputFile = jar.archivePath
        outputFile = jar.archivePath
    }
}

signJar.onlyIf {
    project.hasProperty('keyStore')
}

build.dependsOn signJar

artifacts {
    archives deobfJar
    archives apiJar
    archives sourceJar
    archives jar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = project.archivesBaseName
            version = project.version + '-' + System.getenv('BUILD_NUMBER')
            artifact deobfJar
            artifact sourceJar
            artifact apiJar
            artifact jar
        }
    }
}

publishing {
    repositories {
        maven {
          url "/var/www/repo"
        }
    }
}
